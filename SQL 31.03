create table empresa
(cod_empresa number(3) not null,
nome_empresa varchar2 (150) not null,
nome_fantasia varchar2(150),
data_abertura date not null,
cnpj varchar2(45) not null,
constraint empresa_pk primary key (cod_empresa));

create table departamento
(cod_departamento number(3) not null,
cod_empresa number(3) not null,
descricao_departamento varchar2(100) not null,
constraint departamento_pk primary key (cod_departamento),
constraint depto_empresa_fk foreign key (cod_empresa) references empresa(cod_empresa)
);
CREATE TABLE FUNCIONARIO
( COD_FUNCIONARIO NUMBER(5,0),
NOME_FUNCIONARIO VARCHAR2(100),
COD_DEPARTAMENTO NUMBER(3,0),
COD_EMPRESA NUMBER(3,0),
DATA_CADASTRO DATE,
DATA_NASCIMENTO DATE,
constraint funcionario_pk primary key (cod_funcionario),
constraint funcionario_depto_fk foreign key (cod_departamento) references departamento(cod_departamento),
constraint funcionario_empresa_fk foreign key (cod_empresa) references empresa(cod_empresa) );

create table salario
( cod_funcionario number(5) not null,
data_salario date not null,
valor_salario number(12,2) not null,
constraint salario_pk primary key (cod_funcionario, data_salario),
constraint salario_func_fk foreign key (cod_funcionario) references funcionario(cod_funcionario));

insert into empresa values (1,'JNC' , 'Janelas e Esquadrias JNC', to_date('01/01/2014','dd/mm/rrrr'), '98977668868');
insert into empresa values (2,'Bartiole' , 'Hipermercado Bartiole', to_date('01/01/2013','dd/mm/rrrr'), '45677776677');
insert into empresa values (3,'Gerda' , 'Gerda Marmitaria e Cia', to_date('01/03/2014','dd/mm/rrrr'), '000987990099');
insert into empresa values (4,'Montanhismo AG' , 'Montanhismno Agência de Viagens', to_date('12/03/2014','dd/mm/rrrr'), '98977668868');

insert into departamento values (1, 1, 'RH');
insert into departamento values (2, 1, 'Financeiro');
insert into departamento values (3, 1, 'Vendas');
insert into departamento values (4, 1, 'Produção ');
insert into departamento values (5, 1, 'Marketing');
insert into departamento values (6, 2, 'RH');
insert into departamento values (7, 2, 'Produção');
insert into departamento values (8, 2, 'Vendas');
insert into departamento values (9, 3, 'RH');
insert into departamento values (10, 3, 'Vendas');
insert into departamento values (11, 4, 'RH');
insert into departamento values (12, 4, 'Financeiro');

insert into funcionario values (1, 'Joao da Silva Sauro', 1, 1, to_date( '01/01/2013','dd/mm/rrrr'), to_date('21/01/1980','dd/mm/rrrr'));
insert into funcionario values (2, 'Maria da Luz Cardoso', 3, 1, to_date('01/03/2013','dd/mm/rrrr'), to_date('10/01/1988','dd/mm/rrrr'));
insert into funcionario values (3, 'Joao da Silva Sauro', 2, 1, to_date('01/01/2011','dd/mm/rrrr'), to_date('01/04/2005','dd/mm/rrrr'));
insert into funcionario values (4, 'Pedro Alcântara', 1, 1, to_date('01/03/2013','dd/mm/rrrr'), to_date('01/03/1999','dd/mm/rrrr'));
insert into funcionario values (5, 'Joao da Silva Sauro', 1, 1,to_date( '01/01/2013','dd/mm/rrrr'), to_date('01/01/1981','dd/mm/rrrr'));
insert into funcionario values (6, 'Armando Silva', 6, 2, to_date('01/01/2013','dd/mm/rrrr'), to_date('01/12/1987','dd/mm/rrrr'));
insert into funcionario values (7, 'Joao Alves', 6, 2, to_date('10/09/2013','dd/mm/rrrr'), to_date('22/11/1990','dd/mm/rrrr'));
insert into funcionario values (8, 'Pedro Mariano', 7, 2, to_date('21/09/2012','dd/mm/rrrr'), to_date('01/01/1910','dd/mm/rrrr'));
insert into funcionario values (9, 'Wilison Azevedo Moura', 8, 2, to_date('01/09/2013','dd/mm/rrrr'), to_date('15/08/1989','dd/mm/rrrr'));
insert into funcionario values (10, 'Oscar Lorosa de Marco', 8, 2, to_date('01/01/2014','dd/mm/rrrr'), to_date('11/11/1975','dd/mm/rrrr'));
insert into funcionario values (11, 'Uelington Morgan Frietzviller', 9, 3, to_date('01/10/2013','dd/mm/rrrr'), to_date('01/07/1986','dd/mm/rrrr'));
insert into funcionario values (12, 'Maria Joaquim Barboa Alvino', 9, 3, to_date('12/11/2013','dd/mm/rrrr'), to_date('11/07/1986','dd/mm/rrrr'));
insert into funcionario values (13, 'Oscalina Moriati Alavan', 10, 3, to_date('01/01/2013','dd/mm/rrrr'), to_date('01/01/1988','dd/mm/rrrr'));
insert into funcionario values (14, 'Portinari Muri Per Si', 10, 3, to_date('01/12/2013','dd/mm/rrrr'), to_date('01/10/1981','dd/mm/rrrr'));
insert into funcionario values (15, 'Carlos Henrique Motz',11, 4, to_date('11/08/2013','dd/mm/rrrr'), to_date('01/01/1997','dd/mm/rrrr'));
insert into funcionario values (16, 'Wilison Morta de Si', 12, 4, to_date('12/08/2013','dd/mm/rrrr'), to_date('12/07/1998','dd/mm/rrrr'));

--1.Faça uma função que retorna o nome do departamento e a quantidade de funcionários. Passe como parâmetro o código do departamento.
create or replace function fn_depart_funcio
(parametro_cod_departamento in NUMBER)
return VARCHAR2
IS
    cursor c_depart_funcio is
    select COUNT(funcionario.COD_FUNCIONARIO) qtdFuncionario, departamento.descricao_departamento
    from funcionario, DEPARTAMENTO
    where funcionario.COD_DEPARTAMENTO = DEPARTAMENTO.COD_DEPARTAMENTO
    and DEPARTAMENTO.COD_DEPARTAMENTO = parametro_cod_departamento
    group by departamento.descricao_departamento;

r_depart_funcio c_depart_funcio%rowtype;
BEGIN
    open c_depart_funcio;
    fetch c_depart_funcio into r_depart_funcio;
    if c_depart_funcio%notfound then
        return ('nao encontrou');
        end if;
    close c_depart_funcio;
    RETURN (r_depart_funcio.qtdFuncionario || ' ' || r_depart_funcio.descricao_departamento);
    end;

SELECT fn_depart_funcio(cod_departamento) from DEPARTAMENTO;
--select fn_depart_funcio(4) from dual;

-- 2. Mostre o nome do funcionário, o nome do departamento do funcionário e a empresa. Passe como parâmetro o código do funcionário.
create or replace function FN_INFOS
(PARAMETRO_COD_FUNCIONARIO in number)
return varchar2
is
    cursor C_INFOS is
    select FUNCIONARIO.NOME_FUNCIONARIO, DEPARTAMENTO.DESCRICAO_DEPARTAMENTO, EMPRESA.NOME_EMPRESA
    from FUNCIONARIO, DEPARTAMENTO, EMPRESA
    where FUNCIONARIO.COD_DEPARTAMENTO = DEPARTAMENTO.COD_DEPARTAMENTO and
    EMPRESA.COD_EMPRESA = DEPARTAMENTO.COD_EMPRESA and
    FUNCIONARIO.COD_FUNCIONARIO = PARAMETRO_COD_FUNCIONARIO;
    --group by DEPARTAMENTO.COD_EMPRESA
    --order by FUNCIONARIO.NOME_FUNCIONARIO;

R_INFOS C_INFOS%rowtype;
begin
    open C_INFOS;
    fetch C_INFOS into R_INFOS;
    if C_INFOS%notfound then
        return ('nao encontrou');
        end if;
    close C_INFOS;
   RETURN (R_INFOS.NOME_FUNCIONARIO || '  |  ' || R_INFOS.DESCRICAO_DEPARTAMENTO || '  | ' || R_INFOS.NOME_EMPRESA);
    end;

SELECT FN_INFOS(COD_FUNCIONARIO) from FUNCIONARIO;

-- 3.Usando um select com subconsulta, selecione o ultimo salario de um funcionario. Use a funcao MAX (em vez de count).
insert into salario values (1, to_date( '01/01/2013','dd/mm/rrrr'), 1000);
insert into salario values (1, to_date( '01/01/2014','dd/mm/rrrr'), 2000);
insert into salario values (1, to_date( '01/01/2015','dd/mm/rrrr'), 3000);

insert into salario values (2, to_date( '01/04/2013','dd/mm/rrrr'), 1100);
insert into salario values (2, to_date( '01/07/2014','dd/mm/rrrr'), 2200);
insert into salario values (2, to_date( '01/01/2015','dd/mm/rrrr'), 3300);

select max(valor_salario) ultimoSalario, salario.cod_funcionario 
from salario
where salario.cod_funcionario = (select funcionario.cod_funcionario
from funcionario where salario.cod_funcionario = funcionario.cod_funcionario)
group by salario.cod_funcionario;

-- resposta correta
select salario.valor_salario from salario
     WHERE salario.COD_FUNCIONARIO = 2
     and   DATA_SALARIO = (select max(salariosub.data_salario)
                           from  SALARIO salariosub
                           where salariosub.COD_funcionario = salario.COD_FUNCIONARIO
                             );

-- 4.Utilizando o select do exercicio 3, faça uma funcao que retorna o nome do funcionario e seu ultimo salario. Passe como parametro o codigo do funcionario.
create or replace function FN_SALARIO
(PARAMETRO_COD_FUNCIONARIO in number)
return varchar2
is
    cursor c_salario is
    select max(valor_salario) ultimoSalario, salario.cod_funcionario 
    from salario
    where salario.cod_funcionario = (select funcionario.cod_funcionario
    from funcionario where salario.cod_funcionario = funcionario.cod_funcionario and
    funcionario.cod_funcionario = PARAMETRO_COD_FUNCIONARIO)
    group by salario.cod_funcionario;

R_SALARIO C_SALARIO%rowtype;
begin
    open C_SALARIO;
    fetch C_SALARIO into R_SALARIO;
    if C_SALARIO%notfound then
        return ('nao encontrou');
        end if;
    close C_SALARIO;
   RETURN (R_SALARIO.ultimoSalario || '  |  ' || R_SALARIO.cod_funcionario);
    end;

SELECT FN_SALARIO(COD_FUNCIONARIO) from FUNCIONARIO;

-- respostas correta
create or replace function exercicio_2
(P_cod_funcionario in Number)  
Return Varchar2  
IS  
        Cursor C_A IS  
                 select salario.valor_salario, funcionario.NOME_FUNCIONARIO
                 from salario, funcionario
     WHERE salario.COD_FUNCIONARIO = P_cod_funcionario
     and   funcionario.COD_FUNCIONARIO = salario.COD_FUNCIONARIO
     and   DATA_SALARIO = (select max(salariosub.data_salario)
                           from  SALARIO salariosub
                           where salariosub.COD_funcionario = salario.COD_FUNCIONARIO
                             );
   
R_A C_A%ROWTYPE;  

BEGIN  
OPEN C_A;
        FETCH C_A INTO R_A;  
CLOSE C_A;  

Return ( R_A.NOME_FUNCIONARIO||' '||R_A.valor_salario );
END;


select EXERCICIO_2(2) from dual;
